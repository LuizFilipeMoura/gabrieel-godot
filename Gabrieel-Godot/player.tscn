[gd_scene load_steps=24 format=2]

[ext_resource path="res://SPRITES_GODOT/SPRITE_SHEET.png" type="Texture" id=1]
[ext_resource path="res://sounds/jump3.wav" type="AudioStream" id=2]
[ext_resource path="res://SPRITES_GODOT/TEXTURE.png" type="Texture" id=4]
[ext_resource path="res://sounds/jump2.wav" type="AudioStream" id=5]
[ext_resource path="res://sounds/attack1.wav" type="AudioStream" id=6]
[ext_resource path="res://sounds/jump1.wav" type="AudioStream" id=7]
[ext_resource path="res://sounds/death.wav" type="AudioStream" id=8]
[ext_resource path="res://sounds/attack3.wav" type="AudioStream" id=9]
[ext_resource path="res://sounds/hurt3.wav" type="AudioStream" id=10]
[ext_resource path="res://sounds/attack2.wav" type="AudioStream" id=11]
[ext_resource path="res://sounds/hurt1.wav" type="AudioStream" id=12]
[ext_resource path="res://sounds/hurt2.wav" type="AudioStream" id=13]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const UP = Vector2(0,-1)
const GRAVITY = 10
const ACCELERATION = 10
const MAX_SPEED = 150
const JUMP_HEIGHT = -245
const TIME_PERIOD = 0.1 # 500ms

var rng = RandomNumberGenerator.new()
onready var FIREBALL_SCENE = preload(\"res://Fireball.tscn\")

var maxLIFE = 5

var damage = 1
var lifelabelnode
var trylabelnode
var isAttacking = false
var isHurt = false
var time = 0
var LIFE = 5
var motion = Vector2()
var isAlive = false
var isSpawning = false
var willHurtEnemy = true
var flip = 1;
var trys = 30

var volume = -10

var spawnPoint = Vector2(0,0)

signal win

	
func _ready():
	rng.randomize()
	lifelabelnode = get_parent().get_node(\"CanvasLayer/Interface/VBoxContainer/Counter/Label\")
	trylabelnode = get_parent().get_node(\"CanvasLayer/Interface/VBoxContainer/TryCounter/Label\")
	trylabelnode.text = str(trys)
	spawnPoint = position
	spawn()
	pass # Replace with function body.

func spawn():
	isSpawning = true
	motion = Vector2(0,0)
	position = spawnPoint
	LIFE = maxLIFE
	lifelabelnode.text = str(LIFE)
	$AnimationPlayer.play(\"player_spawn\")
	yield($AnimationPlayer, \"animation_finished\")
	isAlive = true
	isSpawning = false
	motion.y = -100
	
	
	
func _physics_process(_delta):
	if Input.is_action_pressed(\"special\"):
		throw_fireball()
		
	motion.y += GRAVITY
	if isAttacking:
		motion.x*=0.8
	
	if isAlive && !isSpawning:
		var friction = false
		if is_on_floor():
			if Input.is_action_pressed(\"move_left\"):
				if Input.is_action_pressed(\"move_right\"):
					motion.x = lerp(motion.x, 0, 0.1)
					#friction = true
					$AnimationPlayer.play(\"player_idle\")
				else:
					motion.x -=  ACCELERATION
					motion.x = max(motion.x, -MAX_SPEED)
					$Sprite.flip_h = true
					flip = -1
					$AttackRange.transform.origin.x = -5
					if is_on_floor():
						if !isAttacking && !isHurt && motion.x != 0:
							$AnimationPlayer.play(\"player_running\")
							
				
			elif Input.is_action_pressed(\"move_right\"):
				if Input.is_action_pressed(\"move_left\"):
					motion.x = lerp(motion.x, 0, 0.1)
					#friction = true
					$AnimationPlayer.play(\"player_idle\")
				else:
					motion.x +=  ACCELERATION
					motion.x = min(motion.x, MAX_SPEED)
					$Sprite.flip_h = false
					flip = 1
					$AttackRange.transform.origin.x = 22
					if is_on_floor():
						if !isAttacking && !isHurt && motion.x != 0:
							$AnimationPlayer.play(\"player_running\")
			else:
				friction = true
				if is_on_floor():
					if !isAttacking && !isHurt:
						motion.x = motion.x *0.7
						$AnimationPlayer.play(\"player_idle\")
					
		else:
			if Input.is_action_pressed(\"move_left\"):
				motion.x -=  ACCELERATION/2
				motion.x = max(motion.x, -MAX_SPEED*0.8)
			if Input.is_action_pressed(\"move_right\"):
				motion.x +=  ACCELERATION/2
				motion.x = min(motion.x, MAX_SPEED*0.8)

		if is_on_floor():
			if Input.is_action_just_pressed(\"jump\"):
				jump()
		motion = move_and_slide(motion, UP)
		
		if Input.is_action_just_pressed(\"attack\"):
			attack()


func jump():
	var my_random_number = rng.randi_range(1, 3)
	match my_random_number:
		1: 
			$Voices/jump1.volume_db = volume
			$Voices/jump1.play()
		2: 
			$Voices/jump2.volume_db = volume
			$Voices/jump2.play()
		3: 
			$Voices/jump3.volume_db = volume
			$Voices/jump3.play()
	$AnimationPlayer.play(\"player_jumping\")
	motion.y = JUMP_HEIGHT

func attack():
	if($AnimationPlayer.current_animation == \"player_idle\" || $AnimationPlayer.current_animation == \"player_running\"):
			var my_random_number = rng.randi_range(1, 3)
			match my_random_number:
				1: 
					$Voices/attack1.volume_db = volume
					$Voices/attack1.play()
				2: 
					$Voices/attack2.volume_db = volume
					$Voices/attack2.play()
				3: 
					$Voices/attack3.volume_db = volume
					$Voices/attack3.play()
			isAttacking = true
			$AttackRange/CollisionShape2D.disabled = false
			$AnimationPlayer.play(\"player_attacking\")
			yield($AnimationPlayer, \"animation_finished\")
			isAttacking = false
			$AttackRange/CollisionShape2D.disabled = true
			
# Called when the node enters the scene tree for the first time.


func throw_fireball():
	isAttacking = true
	$AnimationPlayer.play(\"throw_fireball\")
	yield($AnimationPlayer, \"animation_finished\")
	isAttacking = false

func fire_fireball():
	var fireball = FIREBALL_SCENE.instance()
	fireball.position = Vector2(get_global_position().x+20, get_global_position().y-10)
	fireball.look_vec = Vector2(flip, 0)
	fireball.flip_h = $Sprite.flip_h
	get_parent().add_child(fireball)

func _process(delta):
	if !isAlive && !isSpawning:
		move_and_collide(Vector2(0, 2))
	time += delta
	if time > TIME_PERIOD:
		time = 0
	pass
	
	
func smallJump():
	motion.y = (JUMP_HEIGHT/4)
	motion.x = motion.x/4
	$AnimationPlayer.play(\"player_jumping\")
	
	
func knockback(amount):
	motion.y = JUMP_HEIGHT*amount
	if ($Sprite.flip_h):
		motion.x = 100
	else:
		motion.x = -100
		
func blinkLights():
	if get_parent().get_node(\"Environment/NightLight\"):
		var node = get_parent().get_node(\"Environment/NightLight\")
		node.blinkLights()
	
func hurt(damageTaken):
	if isAlive:
		LIFE = LIFE - damageTaken
		lifelabelnode.text = str(LIFE)
		if(LIFE <= 0):
			lifelabelnode.text = \"0\"
			if isAlive:
				die()
		else:
			isHurt = true
			var my_random_number = rng.randi_range(1, 3)
			match my_random_number:
				1: 
					$Voices/hurt1.volume_db =  volume
					$Voices/hurt1.play()
				2: 
					$Voices/hurt2.volume_db = volume
					$Voices/hurt2.play()
				3: 
					$Voices/hurt3.volume_db = volume
					$Voices/hurt3.play()
			$AnimationPlayer.play(\"player_hurt\")
			knockback(0.5)
			blinkLights()
			yield($AnimationPlayer, \"animation_finished\")
			isHurt = false
		
func hurtEnemy():
	willHurtEnemy = true

func die(animated = true):
	motion.y = 10
	isAlive = false
	trys-=1

	trylabelnode.text = str(trys)
	if(animated):
		$Voices/die.play()
		$AnimationPlayer.play(\"player_death\")
		yield($AnimationPlayer, \"animation_finished\")
		if(trys<=0):
			get_tree().change_scene(\"res://GameOver.tscn\")
		$DeathTimer.start(2)
	else:
		if(trys<=0):
			get_tree().change_scene(\"res://GameOver.tscn\")
		spawn()
	

func _on_AttackRange_body_entered(body):
	if(body.is_in_group(\"Enemy\") && willHurtEnemy ):
		body.hurt(damage)


func _on_DeathZone_body_entered(body):
	if(body.name == 'Player'):
		die(false)

func _on_CheckPoint_body_entered(body):
	if(body.name == 'Player'):
		spawnPoint = Vector2 (body.position.x, body.position.y - 20)

func _on_NextLevel_body_entered(body):
	if(body.name == 'Player'):
		get_tree().change_scene(\"res://Boss.tscn\")

func turnSprite(flip):
	if flip:
		$Sprite.flip_h = true
	else:
		$Sprite.flip_h = false

func _on_Timer_timeout():
	spawn()

func _on_Boss_bossDie():
	$Camera2D.zoom.x = 0.2
	$Camera2D.zoom.y = 0.2
	emit_signal(\"win\")
	pass # Replace with function body.


"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 13.8273, 3.9184 )

[sub_resource type="Animation" id=3]
length = 0.458334
step = 0.0416667
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.0416667, 0.0833334, 0.125, 0.166667, 0.208334, 0.25, 0.291667, 0.333334, 0.375, 0.416667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.378 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "hurtEnemy"
} ]
}

[sub_resource type="Animation" id=4]
length = 0.933334
step = 0.0666667
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.0666667, 0.133333, 0.2, 0.266667, 0.333333, 0.4, 0.466667, 0.533333, 0.6, 0.666667, 0.733333, 0.8, 0.866667 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.5 ]
}

[sub_resource type="Animation" id=5]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 15, 16, 17 ]
}

[sub_resource type="Animation" id=6]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=7]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 34, 33, 35, 36, 37, 38 ]
}

[sub_resource type="Animation" id=8]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14 ]
}

[sub_resource type="Animation" id=9]
length = 1.7
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1, 1.05, 1.1, 1.15, 1.2, 1.25, 1.3, 1.35, 1.4, 1.45, 1.5, 1.55, 1.6, 1.65, 1.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=10]
resource_name = "throw_fireball"
tracks/0/type = "bezier"
tracks/0/path = NodePath("AnimationPlayer:playback_speed")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.7 )
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "fire_fireball"
} ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 74, 75, 76, 77, 78, 79, 80, 80, 80, 80 ]
}

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 8.44684, 15.9194 )

[node name="Player" type="KinematicBody2D"]
position = Vector2( 305.385, 147.172 )
collision_mask = 7
script = SubResource( 1 )

[node name="Camera2D" type="Camera2D" parent="."]
scale = Vector2( -0.726763, 1.10608 )
current = true
zoom = Vector2( 0.3, 0.3 )
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = true
smoothing_speed = 8.0

[node name="AttackRange" type="Area2D" parent="."]
position = Vector2( 1.64056, -5.30877 )
collision_layer = 524288
collision_mask = 524288

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackRange"]
position = Vector2( 0.667419, 0.166855 )
rotation = -6.28319
shape = SubResource( 2 )
disabled = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/player_attacking = SubResource( 3 )
anims/player_death = SubResource( 4 )
anims/player_hurt = SubResource( 5 )
anims/player_idle = SubResource( 6 )
anims/player_jumping = SubResource( 7 )
anims/player_running = SubResource( 8 )
anims/player_spawn = SubResource( 9 )
anims/throw_fireball = SubResource( 10 )

[node name="Sprite" type="Sprite" parent="."]
light_mask = 2
position = Vector2( 8.97913, -7.31869 )
z_index = 1
texture = ExtResource( 1 )
vframes = 9
hframes = 9
frame = 80

[node name="Player_glow" type="Light2D" parent="."]
light_mask = 3075
position = Vector2( 9.49854, -3.0376 )
scale = Vector2( 0.05, 0.05 )
texture = ExtResource( 4 )
texture_scale = 11.97
color = Color( 0.764706, 0.478431, 0.866667, 0.521569 )
energy = 2.0
range_height = 2048.0
range_layer_min = -80
shadow_enabled = true
shadow_color = Color( 0, 0, 0, 1 )
shadow_buffer_size = 32
shadow_gradient_length = 1.0
shadow_filter = 2

[node name="DeathTimer" type="Timer" parent="."]
one_shot = true

[node name="Voices" type="Node" parent="."]

[node name="attack1" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 6 )
volume_db = -5.0

[node name="attack2" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 11 )
volume_db = -5.0

[node name="attack3" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 9 )
volume_db = -5.0

[node name="hurt1" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 12 )
volume_db = -5.0

[node name="hurt2" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 13 )
volume_db = -5.0

[node name="hurt3" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 10 )
volume_db = -5.0

[node name="die" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 8 )
volume_db = 15.0

[node name="jump1" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 7 )
volume_db = -5.0

[node name="jump2" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 5 )
volume_db = -5.0

[node name="jump3" type="AudioStreamPlayer" parent="Voices"]
stream = ExtResource( 2 )
volume_db = -5.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 8.91339, -7.34991 )
shape = SubResource( 11 )
[connection signal="body_entered" from="AttackRange" to="." method="_on_AttackRange_body_entered"]
[connection signal="timeout" from="DeathTimer" to="." method="_on_Timer_timeout"]
